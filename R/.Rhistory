# ------------------------------------------------------------------------------
# Remove rows with "NA" in the "sex" column
dat <- dat %>%
filter(sex != "NA")
# Exclude the stock # 25203
dat <- dat %>%
filter(stock != "25203")
# Calculate correlation for each "stock" group
correlation_data <- dat %>%
group_by(stock) %>%
summarize(correlation = cor(dm, fw))
View(correlation_data)
# Create a scatter plot with different shapes for males and females, color-coded by "stock," and facet by "stock"
combined_plot <- ggplot(data = dat, aes(x = dm, y = fw, color = stock)) +
geom_point() +
labs(x = "Dry mass (mg)", y = "Fresh mass (mg)") +
geom_text(data = correlation_data, aes(label = paste("Correlation =", round(correlation, 2)),
x = max(dat$dm), y = min(dat$fw) + 0.2), hjust = 1, vjust = 0) +
facet_wrap(~stock)
# Remove the legend for the "stock" variable
combined_plot <- combined_plot + guides(color = FALSE)
combined_plot <- ggplot(data = dat, aes(x = dm, y = fw, color = stock)) +
geom_point() +
labs(x = "Dry mass (mg)", y = "Fresh mass (mg)") +
geom_text(data = correlation_data, aes(label = paste("Correlation =", round(correlation, 2)),
x = max(dat$dm), y = min(dat$fw) + 0.2), hjust = 1, vjust = 0) +
facet_wrap(~stock)
combined_plot
# Exclude the stock # 25203
dat <- dat %>%
filter(stock != "25203")
combined_plot
combined_plot <- ggplot(data = dat, aes(x = dm, y = fw, color = stock)) +
geom_point() +
labs(x = "Dry mass (mg)", y = "Fresh mass (mg)") +
geom_text(data = correlation_data, aes(label = paste("Correlation =", round(correlation, 2)),
x = max(dat$dm), y = min(dat$fw) + 0.2), hjust = 1, vjust = 0) +
facet_wrap(~stock)
# Remove the legend for the "stock" variable
combined_plot <- combined_plot + guides(color = FALSE)
combined_plot
# Export the plot as a PNG file
ggsave("combined_scatter_plot.png", plot = combined_plot, width = 10, height = 4, units = "in", dpi = 600)
# Export the plot as a PNG file
ggsave("../Outputs/combined_scatter_plot.png", ombined_plot, width = 10, height = 4, units = "in", dpi = 600)
# Export the plot as a PNG file
ggsave("../Outputs/combined_scatter_plot.png", combined_plot, width = 10, height = 4, units = "in", dpi = 600)
# ------------------------------------------------------------------------------
# Script to calculate the correlation between fresh mass and dry mass of three isogenic lines
# This script was prepared to answer one of the reviewer's concern
# ------------------------------------------------------------------------------
# Data collected by Félix P Leiva (e-mail: felixpleiva@gmail.com)
# Script created by Félix P Leiva (e-mail: felixpleiva@gmail.com)
# ------------------------------------------------------------------------------
# Cleaning working space
rm(list = ls())
# ------------------------------------------------------------------------------
# check directory
getwd()
# ------------------------------------------------------------------------------
# libraries
library(dplyr)
library(readxl)
# ------------------------------------------------------------------------------
# load data
dat <- read_excel("../Data/fresh mass and dry mass correlation 4 lines 20191206.xlsx")
# ------------------------------------------------------------------------------
# Remove rows with "NA" in the "sex" column
dat <- dat %>%
filter(sex != "NA")
# Exclude the stock # 25203
dat <- dat %>%
filter(stock != "25203")
# Calculate correlation for each "stock"
correlation_data <- dat %>%
group_by(stock) %>%
summarize(correlation = cor(dm, fw))
# Create a scatter plot with different shapes for males and females, color-coded by "stock," and facet by "stock"
combined_plot <- ggplot(data = dat, aes(x = dm, y = fw, color = stock)) +
geom_point() +
labs(x = "Dry mass (mg)", y = "Fresh mass (mg)") +
geom_text(data = correlation_data, aes(label = paste("Correlation =", round(correlation, 2)),
x = max(dat$dm), y = min(dat$fw) + 0.2), hjust = 1, vjust = 0) +
facet_wrap(~stock)
# Remove the legend for the "stock" variable
combined_plot <- combined_plot + guides(color = FALSE)
# Export the plot as a PNG file
ggsave("../Outputs/combined_scatter_plot.png", combined_plot, width = 10, height = 4, units = "in", dpi = 600)
# ------------------------------------------------------------------------------
# Script to calculate the correlation between fresh mass and dry mass of three isogenic lines
# This script was prepared to answer one of the reviewer's concern
# ------------------------------------------------------------------------------
# Data collected by Félix P Leiva (e-mail: felixpleiva@gmail.com)
# Script created by Félix P Leiva (e-mail: felixpleiva@gmail.com)
# ------------------------------------------------------------------------------
# Cleaning working space
rm(list = ls())
# ------------------------------------------------------------------------------
# check directory
getwd()
# ------------------------------------------------------------------------------
# libraries
library(dplyr)
library(readxl)
# ------------------------------------------------------------------------------
# load data
dat <- read_excel("../Data/fresh mass and dry mass correlation 4 lines 20191206.xlsx")
# ------------------------------------------------------------------------------
# Remove rows with "NA" in the "sex" column
dat <- dat %>%
filter(sex != "NA")
# Exclude the stock # 25203
dat <- dat %>%
filter(stock != "25203")
# Calculate correlation for each "stock"
correlation_data <- dat %>%
group_by(stock) %>%
summarize(correlation = cor(dm, fw))
# Create a scatter plot with different shapes for males and females, color-coded by "stock," and facet by "stock"
combined_plot <- ggplot(data = dat, aes(x = dm, y = fw, color = stock)) +
geom_point() +
labs(x = "Dry mass (mg)", y = "Fresh mass (mg)") +
geom_text(data = correlation_data, aes(label = paste("Correlation =", round(correlation, 2)),
x = max(dat$dm), y = min(dat$fw) + 0.2), hjust = 1, vjust = 0) +
facet_wrap(~stock)
# Remove the legend for the "stock" variable
combined_plot <- combined_plot + guides(color = FALSE)
# Export the plot as a PNG file
ggsave("../Outputs/9.2.1. Combined_scatter_plot.png", combined_plot, width = 10, height = 4, units = "in", dpi = 600)
#-------------------------------------------------------------------------------
#saving session information with all packages versions for reproducibility
#purposes
sink("../Outputs/9.1.2. Correlation_between_DM_and_FM_R_session.txt")
sessionInfo()
sink()
# Create a scatter plot with different shapes for males and females, color-coded by "stock," and facet by "stock"
combined_plot <- ggplot(data = dat, aes(x = dm, y = fw, color = stock)) +
geom_point() +
labs(x = "Dry mass (mg)", y = "Fresh mass (mg)", size = 2) +
geom_text(data = correlation_data, aes(label = paste("Correlation =", round(correlation, 2)),
x = max(dat$dm), y = min(dat$fw) + 0.2), hjust = 1, vjust = 0) +
facet_wrap(~stock)
# Remove the legend for the "stock" variable
combined_plot <- combined_plot + guides(color = FALSE)
# Export the plot as a PNG file
ggsave("../Outputs/9.2.1. Combined_scatter_plot.png", combined_plot, width = 10, height = 4, units = "in", dpi = 600)
# ------------------------------------------------------------------------------
# Script to calculate the correlation between fresh mass and dry mass of three isogenic lines
# This script was prepared to answer one of the reviewer's concern
# ------------------------------------------------------------------------------
# Data collected by Félix P Leiva (e-mail: felixpleiva@gmail.com)
# Script created by Félix P Leiva (e-mail: felixpleiva@gmail.com)
# ------------------------------------------------------------------------------
# Cleaning working space
rm(list = ls())
# ------------------------------------------------------------------------------
# check directory
getwd()
# ------------------------------------------------------------------------------
# libraries
library(dplyr)
library(readxl)
# ------------------------------------------------------------------------------
# load data
dat <- read_excel("../Data/fresh mass and dry mass correlation 4 lines 20191206.xlsx")
# ------------------------------------------------------------------------------
# Remove rows with "NA" in the "sex" column
dat <- dat %>%
filter(sex != "NA")
# Exclude the stock # 25203
dat <- dat %>%
filter(stock != "25203")
# Calculate correlation for each "stock"
correlation_data <- dat %>%
group_by(stock) %>%
summarize(correlation = cor(dm, fw))
# Create a scatter plot with different shapes for males and females, color-coded by "stock," and facet by "stock"
combined_plot <- ggplot(data = dat, aes(x = dm, y = fw, color = stock)) +
geom_point() +
labs(x = "Dry mass (mg)", y = "Fresh mass (mg)", size = 2) +
geom_text(data = correlation_data, aes(label = paste("Correlation =", round(correlation, 2)),
x = max(dat$dm), y = min(dat$fw) + 0.2), hjust = 1, vjust = 0) +
facet_wrap(~stock)
# Remove the legend for the "stock" variable
combined_plot <- combined_plot + guides(color = FALSE)
# Export the plot as a PNG file
ggsave("../Outputs/9.2.1. Combined_scatter_plot.png", combined_plot, width = 10, height = 4, units = "in", dpi = 600)
ggsave("../Outputs/9.2.1. Combined_scatter_plot.pdf", combined_plot, width = 10, height = 4)
#-------------------------------------------------------------------------------
#saving session information with all packages versions for reproducibility
#purposes
sink("../Outputs/9.1.2. Correlation_between_DM_and_FM_R_session.txt")
sessionInfo()
sink()
################################################################################
############################ END OF SCRIPT #####################################
################################################################################
# Leiva FP, Santos M, Rezende EL & Verberk WCEP. (2021). Paper data and code of
# manuscript: Intraspecific variation on heat tolerance in a model ectotherm:
# the role of oxygen, cell size and body size Zenodo.
# https://doi.org/10.5281/zenodo.5120028.
# ------------------------------------------------------------------------------
# Cleaning working space
rm(list=ls())
today<-format(Sys.Date(),"%Y%m%d")
# ------------------------------------------------------------------------------
# set the working directory to the folder containing this script:
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
getwd()# check directory
# -------------------------------------------------------------------------------------
#Libraries
library(nlme)
library(car)
library(visreg)
library(MuMIn)
library(AICcmodavg)
library(MASS)
# ------------------------------------------------------------------------------
#Load data of normoxia (20 lines)
all.lines.21 <- read.csv("../Outputs/4.1.1. Survival time of Drosophila melanogaster and its associated size traits at 21 kPa.csv")
10^(min(all.lines.21$surv.time)) # lower range of survival time in minutes
10^(max(all.lines.21$surv.time)) # upper range of survival time in minutes
10^(median(all.lines.21$surv.time)) # median of survival time in minutes
# ------------------------------------------------------------------------------
#Step 1: aggregate data into median values
# ------------------------------------------------------------------------------
d21.median = aggregate(surv.time ~
test.temp +
cell.area +
cell.number +
stock +
genotype +
iod +
fw +
ws +
sex,
all.lines.21, median)
#see structure of data
str(d21.median)
#test temp as numeric
d21.median$test.temp <- as.numeric(d21.median$test.temp)
#stock as factor
d21.median$stock     <- as.factor(d21.median$stock)
# ------------------------------------------------------------------------------
# Step 2: Correct traits for effect of sex so that the analysis works with flies
# that have trait values that are relatively large or small for their sex
# ------------------------------------------------------------------------------
# relative cell area
d21.median$cell.area.rel <- as.numeric(scale(resid(lm(cell.area ~ sex, data = d21.median))))
# relative cell number
d21.median$cell.number.rel <- as.numeric(scale(resid(lm(cell.number ~ sex, data = d21.median))))
# relative fresh mass
d21.median$fw.rel <- as.numeric(scale(resid(lm(fw ~ sex, data = d21.median))))
# relative interocular distance
d21.median$iod.rel <- as.numeric(scale(resid(lm(iod ~ sex, data = d21.median))))
# relative wing size
d21.median$ws.rel <- as.numeric(scale(resid(lm(ws ~ sex, data = d21.median))))
# ------------------------------------------------------------------------------
#Step 3: Start with the full model and calculate VIFs
# ------------------------------------------------------------------------------
f21median <- gls(surv.time ~
scale(test.temp) +
scale(test.temp) * cell.area.rel +
scale(test.temp) * cell.number.rel +
scale(test.temp) * ws.rel +
scale(test.temp) * fw.rel +
scale(test.temp) * iod.rel +
scale(test.temp) * sex,
data = d21.median, na.action = na.omit, method = "ML")
vif(f21median)# high VIFs
f21median <- gls(surv.time ~ scale(test.temp) +
scale(test.temp) * cell.area.rel +
scale(test.temp) * cell.number.rel +
# scale(test.temp) * ws.rel +
scale(test.temp) * fw.rel +
scale(test.temp) * iod.rel +
scale(test.temp) * sex,
data = d21.median, na.action = na.omit, method = "ML")
vif(f21median)# VIFs are now 0K!
anova(f21median)
drop1(f21median)
AICc(f21median)#-170.7806
# ------------------------------------------------------------------------------
# Step 4: Analyse a list of candidate models (except for wing size) and compare
# their AICs
# ------------------------------------------------------------------------------
m0 <- gls(surv.time ~
scale(test.temp),
data = d21.median, na.action = na.omit, method = "ML")
m1.1 <- gls(surv.time ~
scale(test.temp) +
scale(test.temp) * sex,
data = d21.median, na.action = na.omit, method = "ML")
m1.2 <- gls(surv.time ~
scale(test.temp) +
scale(test.temp) * cell.area.rel,
data = d21.median, na.action = na.omit, method = "ML")
m1.3 <- gls(surv.time ~
scale(test.temp) +
scale(test.temp) * cell.number.rel,
data = d21.median, na.action = na.omit, method = "ML")
m1.4 <- gls(surv.time ~
scale(test.temp) +
scale(test.temp) * fw.rel,
data = d21.median, na.action = na.omit, method = "ML")
m1.5 <- gls(surv.time ~
scale(test.temp) +
scale(test.temp) * iod.rel,
data = d21.median, na.action = na.omit, method = "ML")
fit.list.step4 <- list(m0, m1.1, m1.2, m1.3, m1.4, m1.5)
fit.names.step4 <- c("Stress temp",
"Stress temp + Stress temp * sex",
"Stress temp + Stress temp * cell area",
"Stress temp + Stress temp * cell number",
"Stress temp + Stress temp * fresh mass",
"Stress temp + Stress temp * interocular distance")
#compare by using AICc
fit.step4 <- aictab(fit.list.step4, fit.names.step4, second.ord = T,sort = TRUE, digits = 3, LL = TRUE)
fit.step4
# sex and test temperature interaction improve model fit
# ------------------------------------------------------------------------------
# Step 5: Adding to the best model from step 4 the interactive effect of traits
# and test temperature and then compare their AICs
# ------------------------------------------------------------------------------
m2.1 <- gls(surv.time ~ scale(test.temp) +
scale(test.temp) * sex +
scale(test.temp) * cell.area.rel,
data = d21.median, na.action = na.omit, method = "ML")
m2.2 <- gls(surv.time ~ scale(test.temp) +
scale(test.temp) * sex +
scale(test.temp) * cell.number.rel,
data = d21.median, na.action = na.omit, method = "ML")
m2.3 <- gls(surv.time ~ scale(test.temp) +
scale(test.temp) * sex +
scale(test.temp) * fw.rel,
data = d21.median, na.action = na.omit, method = "ML")
m2.4 <- gls(surv.time ~
scale(test.temp) +
scale(test.temp) * sex +
scale(test.temp) * iod.rel,
data = d21.median, na.action = na.omit, method = "ML")
fit.list.step5 <- list(m1.1, m2.1, m2.2, m2.3, m2.4)
fit.names.step5 <-c("ST + ST * sex",
"ST + ST * sex + ST * cell area",
"ST + ST * sex + ST * cell number",
"ST + ST * sex + ST * fresh mass",
"ST + ST * sex + ST * interocular distance")
#compare by using AICc
fit.step5 <- aictab(fit.list.step5, fit.names.step5, second.ord = T,sort = TRUE, digits = 3, LL = TRUE)
fit.step5
# model that includes sex and relative fresh mass works better
# ------------------------------------------------------------------------------
# Step 6: Adding to the best model from step 5 the interactive effect of traits
# and test temperature and then compare their AICs
# ------------------------------------------------------------------------------
m3.1 <- gls(surv.time ~ scale(test.temp) +
scale(test.temp) * sex +
scale(test.temp) * fw.rel +
scale(test.temp) * cell.area.rel,
data = d21.median, na.action = na.omit, method = "ML")
m3.2 <- gls(surv.time ~ scale(test.temp) +
scale(test.temp) * sex +
scale(test.temp) * fw.rel +
scale(test.temp) * cell.number.rel,
data = d21.median, na.action = na.omit, method = "ML")
m3.3 <- gls(surv.time ~
scale(test.temp) +
scale(test.temp) * sex +
scale(test.temp) * fw.rel +
scale(test.temp) * iod.rel,
data = d21.median, na.action = na.omit, method = "ML")
fit.list.step6 <- list(m2.3, m3.1, m3.2, m3.3)
fit.names.step6 <- c("ST + ST * sex + ST * fresh mass",
"ST + ST * sex + ST * fresh mass + ST * cell area",
"ST + ST * sex + ST * fresh mass + ST * cell number",
"ST + ST * sex + ST * fresh mass + ST * interocular distance")
#compare by using AICc
fit.step6 <- aictab(fit.list.step6, fit.names.step6, second.ord = T,sort = TRUE, digits = 3, LL = TRUE)
fit.step6
# (1) Stress temp + Stress temp * sex + Stress temp * fresh mass
drop1(m2.3, test = "Chisq")
summary(m2.3)
# (2) Stress temp + Stress temp * sex + Stress temp * fresh mass + Stress temp * cell area
drop1(m3.1, test = "Chisq")
summary(m3.1)
drop1(m3.3,test = "Chisq")
summary(m3.3)
AIC(m2.3, m3.1, m3.3)
# Only the fixed effect of "scale(test.temp):sex" affects significantly surv time.
# ------------------------------------------------------------------------------
# Step 7: Adding to the best model from step 6 the interactive effect of traits
# and test temperature and then compare their AICs
# ------------------------------------------------------------------------------
m4.1 <- gls(surv.time ~ scale(test.temp) +
scale(test.temp) * sex +
scale(test.temp) * cell.area.rel + #given we have specific for cell area, we retain it
iod.rel+fw.rel,
data = d21.median, na.action = na.omit, method = "ML")
drop1(m4.1, test = "Chisq")
# test temp and cell area interaction and interocular distance are not
# important, so next model exclude this term
m4.2 <- gls(surv.time ~ scale(test.temp) +
scale(test.temp) * sex +
fw.rel +
cell.area.rel,
data = d21.median, na.action = na.omit, method = "ML")
drop1(m4.2, test = "Chisq")
m4.3 <- gls(surv.time ~ scale(test.temp) +
scale(test.temp) * sex +
fw.rel,
data = d21.median, na.action = na.omit, method = "ML")
drop1(m4.3, test = "Chisq")
summary(m4.3)
# Lets now start from a full model
f21median2 <- gls(surv.time ~ scale(test.temp) +
scale(test.temp) * cell.area.rel +
scale(test.temp) * cell.number.rel +
#scale(test.temp) * ws.rel +
scale(test.temp) * fw.rel +
scale(test.temp) * iod.rel +
scale(test.temp) * sex,
data = d21.median, na.action = na.omit, method = "ML")
drop1(f21median2)
stepAIC(f21median2)
# Lets write down "more simplified" this model
fmod1 <- lm(surv.time ~ scale(test.temp) +
cell.area.rel +
fw.rel +
iod.rel +
sex +
scale(test.temp):cell.area.rel +
scale(test.temp):fw.rel +
scale(test.temp):sex,
data = d21.median, na.action = na.omit, method = "ML")
AIC(fmod1)#-177.1645
m4.3 <- lm(surv.time ~ scale(test.temp) +
scale(test.temp) * sex +
fw.rel,
data = d21.median, na.action = na.omit, method = "ML")
AIC(m4.3)#-176.113
#The difference is low if we look at the r squared of both models
summary(fmod1)$r.squared-summary(m4.3)$r.squared
#Just to be sure let now check if there is a three ways interaction
f21median3 <- gls(surv.time ~
scale(test.temp) +
scale(test.temp) *
cell.area.rel * sex,
data = d21.median, na.action = na.omit, method = "ML")
#compare by using AICc
fit.step6 <- aictab(fit.list.step6, fit.names.step6, second.ord = T,sort = TRUE, digits = 3, LL = TRUE)
fit.step6
#-------------------------------------------------------------------------------
# TABLE 2 MAIN MANUSCRIPT
#-------------------------------------------------------------------------------
fit_0 <- lm(surv.time ~ scale(test.temp),
data = d21.median, na.action = na.omit)
summary(fit_0)
fit_1 <- lm(surv.time ~ scale(test.temp) +
scale(test.temp) * sex,
data = d21.median, na.action = na.omit)
summary(fit_1)
fit_2 <- lm(surv.time ~ scale(test.temp) +
scale(test.temp) * cell.area.rel,
data = d21.median, na.action = na.omit)
summary(fit_2)
fit_3 <- lm(surv.time ~ scale(test.temp) +
scale(test.temp) * fw.rel,
data = d21.median, na.action = na.omit)
summary(fit_3)
fit_4 <- lm(surv.time ~ scale(test.temp) +
scale(test.temp) * sex +
scale(test.temp) * cell.area.rel,
data = d21.median, na.action = na.omit)
summary(fit_4)
fit_5 <- lm(surv.time ~ scale(test.temp) +
scale(test.temp) * sex +
scale(test.temp) * fw.rel,
data = d21.median, na.action = na.omit)
summary(fit_5)
fit_6 <- lm(surv.time ~ scale(test.temp) +
scale(test.temp) * fw.rel +
scale(test.temp) * cell.area.rel,
data = d21.median, na.action = na.omit)
summary(fit_6)
fit_full <- lm(surv.time ~ scale(test.temp) +
scale(test.temp) * sex +
scale(test.temp) * fw.rel +
scale(test.temp) * cell.area.rel,
data = d21.median, na.action = na.omit)
summary(fit_full)
fit.list.table.2 <- list(fit_0,
fit_1,
fit_2,
fit_3,
fit_4,
fit_5,
fit_6,
fit_full
)
fit.names.table.2 <-c(
"TT",
"TT + TT * Sex",
"TT + TT * CA",
"TT + TT * FM",
"TT + TT * Sex + TT * CA",
"TT + TT * Sex + TT * FM",
"TT + TT * CA  + TT * FM",
"TT + TT * Sex + TT * CA + TT * FM"
)
#compare by using AICc
fit.table.2<-aictab(fit.list.table.2,fit.names.table.2, second.ord = T,sort = TRUE, digits = 3, LL=TRUE)
fit.table.2
